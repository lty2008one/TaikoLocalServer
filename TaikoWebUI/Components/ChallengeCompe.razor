@using Blazored.LocalStorage

@inject HttpClient Client
@inject AuthService AuthService
@inject IDialogService DialogService;
@inject IGameDataService GameDataService
@inject ILocalStorageService LocalStorage

@if (ChallengeCompetition != null)
{
    <MudCard Class="user-card" Outlined="true">
        <MudCardHeader>
            <CardHeaderContent>
                <MudStack Row="true" Spacing="1">
                    @if (ChallengeCompetition.CompeteMode == CompeteModeType.Chanllenge)
                    {
                        if (AuthService.IsAdmin)
                        {
                            <MudText Typo="Typo.h6" Style="font-weight:bold;word-break:break-all">@FormatChallengeTitle(Localizer["FullChallengeTitle"])</MudText>
                        }
                        else if (ChallengeCompetition?.Baid != Baid)
                        {
                            <MudIcon Icon="@Icons.Material.Filled.MoveToInbox" Color="Color.Secondary" Style="margin-top: 4px;" />
                            <MudText Typo="Typo.h6" Style="font-weight:bold;word-break:break-all">@FormatChallengeTitle(Localizer["ReceiverChallengeTitle"])</MudText>
                        }
                        else
                        {
                            <MudIcon Icon="@Icons.Material.Filled.ForwardToInbox" Color="Color.Primary" Style="margin-top: 4px;" />
                            <MudText Typo="Typo.h6" Style="font-weight:bold;word-break:break-all">@FormatChallengeTitle(Localizer["CreatorChallengeTitle"])</MudText>
                        }
                    }
                    else
                    {
                        <MudText Typo="Typo.h6" Style="font-weight:bold;word-break:break-all">@ChallengeCompetition?.CompeteName</MudText>
                    }
                </MudStack>
                
                <MudText Typo="Typo.caption" Style="display: block">@Localizer["Comp ID"]: @ChallengeCompetition?.CompId</MudText>
                <MudText Typo="Typo.caption" Style="display: block">@Localizer["Describe"]: @ChallengeCompetition?.CompeteDescribe</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                @if (false && ChallengeCompetition?.Baid == Baid || AuthService.IsAdmin)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" />
                }
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            
            @{
                foreach (var song in ChallengeCompetition.Songs)
                {
                    @if (MusicDetailDictionary != null && song.MusicDetail!= null){
                        <div>
                            <MudButton Variant="Variant.Text" StartIcon=@Icons.Material.Filled.Audiotrack>
                                @GameDataService.GetMusicNameBySongId(MusicDetailDictionary, song.MusicDetail.SongId, SongNameLanguage)@(song.BestScores.Any(bs => bs.Baid == Baid) ? (" (" + Localizer["Played"] + ")") : "")
                            </MudButton>
                        </div>
                    }
                }
            }
        </MudCardContent>
        <MudCardActions>
            <MudStack Row="true" Style="width:100%" Spacing="4" Justify="Justify.FlexEnd">
                <MudButton OnClick=@(_ => AnswerChallenge(true))>@Localizer["Information"]</MudButton>
                @if (ChallengeCompetition.ExpireTime < DateTime.Now)
                {
                    <MudText Typo="Typo.body1" Style="padding: 6px 8px 6px 8px;" Color="Color.Warning">@Localizer["Finished"]</MudText>
                }
                else if (ChallengeCompetition.CompeteMode == CompeteModeType.Chanllenge)
                {
                    var targeted = true;
                    if (ChallengeCompetition?.Participants.Find(u => u.Baid == Baid) == null) targeted = false; 
                    //The above is used for admins only: If you are the target of a challenge, you should be able to accept or reject it
                    if (ChallengeCompetition?.Baid == Baid || ChallengeCompetition?.State != CompeteState.Waiting || (!targeted && AuthService.IsAdmin))
            {
                        switch (ChallengeCompetition?.State)
                        {
                            case CompeteState.Waiting:
                                <MudText Typo="Typo.body1" Style="padding: 6px 8px 6px 8px;" Color="Color.Primary">@Localizer["Waiting"]</MudText>
                                break;
                            case CompeteState.Normal:
                                <MudText Typo="Typo.body1" Style="padding: 6px 8px 6px 8px;" Color="Color.Success">@Localizer["Accepted"]</MudText>
                                break;
                            case CompeteState.Rejected:
                                <MudText Typo="Typo.body1" Style="padding: 6px 8px 6px 8px;" Color="Color.Error">@Localizer["Rejected"]</MudText>
                                break;
                        }
                    }
                    else
                    {
                        <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled" OverrideStyles="false">
                            <MudButton Color="Color.Success" Variant="Variant.Filled" Disabled="@((AuthService.IsAdmin && !targeted)|| (ChallengeCompetition?.State == CompeteState.Waiting && ChallengeCompetition?.Baid == Baid))"
                                       OnClick=@(_ => AnswerChallenge(true))>@Localizer["Accept"]</MudButton>
                            <MudButton Color="Color.Error" Variant="Variant.Filled" Disabled="@((AuthService.IsAdmin && !targeted) || (ChallengeCompetition?.State == CompeteState.Waiting && ChallengeCompetition?.Baid == Baid))"
                                       OnClick=@(_ => AnswerChallenge(false))>@Localizer["Reject"]</MudButton>
                        </MudButtonGroup>
                        // The buttons are disabled on (AuthService.IsAdmin && !targeted) which means "You are admin and you're not a target of the challenge" 
                        // This should never happen as you should instead see the buttons from the switch statement above !
                    }
                }
                else if (ChallengeCompetition.CompeteMode == CompeteModeType.Compete || ChallengeCompetition.CompeteMode == CompeteModeType.OfficialCompete)
                {
                    if (!AuthService.IsAdmin)
                    {
                        if (ChallengeCompetition.Participants.Any(p => p.Baid == Baid))
                        {
                            <MudText Typo="Typo.body1" Style="padding: 6px 8px 6px 8px;" Color="Color.Success">@Localizer["Participated"]</MudText>
                        }
                        else
                        {
                            if (ChallengeCompetition.MaxParticipant <= ChallengeCompetition.Participants.Count)
                            {
                                <MudText Typo="Typo.body1" Style="padding: 6px 8px 6px 8px;" Color="Color.Warning">@Localizer["Fulfilled"]</MudText>
                            }
                            else
                            {
                                <MudButton OnClick="AnswerCompete" Color="Color.Success" Variant="Variant.Filled">@Localizer["Participate"]</MudButton>
                            }
                        }
                    } else
                    {
                        <MudText Typo="Typo.body1" Style="padding: 6px 8px 6px 8px;" Color="@((ChallengeCompetition.Participants.Count < ChallengeCompetition.MaxParticipant) ? Color.Primary : Color.Warning)">@ChallengeCompetition.Participants.Count / @ChallengeCompetition.MaxParticipant</MudText>
                    }
                }
            </MudStack>
        </MudCardActions>
    </MudCard>
}