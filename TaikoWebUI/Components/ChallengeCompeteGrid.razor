@using Blazored.LocalStorage

@inject HttpClient Client
@inject AuthService AuthService
@inject IDialogService DialogService;
@inject IGameDataService GameDataService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject BreadcrumbsStateContainer BreadcrumbsStateContainer

<MudGrid Class="my-8">
    @if (!AuthService.LoginRequired || (AuthService.LoginRequired))
    {
        <MudItem xs="12">
            <div class="d-flex justify-content-end gap-2">
                <MudStack StretchItems="StretchItems.Start" Row="true" Style="width: 100%">
                    <MudInput @bind-Value="searchTerm"
                              TextChanged="(async term => { isLoading = true; await OnSearch(term); })"
                              Immediate="true"
                              FullWidth="true"
                              Clearable="true"
                              Margin="Margin.Dense"
                              Label="@Localizer["Search"]"
                              Placeholder="@Localizer["Search by Name, Comp ID"]"
                              Variant="Variant.Outlined"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Search" Style="width: 100%"/>
                    @if (Mode == 1)
                    {
                        <MudButton Variant="Variant.Filled" Size="Size.Large" StartIcon="@Icons.Material.Filled.Add" Color="Color.Tertiary" OnClick=@(_ => OpenDialogAsync(1, 1)) Style="width: 80px">@Localizer["Add"]</MudButton>
                    }
                    else if (Mode == 2)
                    {
                        <MudButton Variant="Variant.Filled" Size="Size.Large" StartIcon="@Icons.Material.Filled.Add" Color="Color.Tertiary" OnClick=@(_ => OpenDialogAsync(2, 3)) Style="width: 80px">@Localizer["Add"]</MudButton>
                    }
                    else if (Mode == 3 && AuthService.IsAdmin)
                    {
                        <MudButton Variant="Variant.Filled" Size="Size.Large" StartIcon="@Icons.Material.Filled.Add" Color="Color.Tertiary" OnClick=@(_ => OpenDialogAsync(3, 5, 365, 100)) Style="width: 80px">@Localizer["Add"]</MudButton>
                    }
                </MudStack>
            </div>
        </MudItem>
        @if (isLoading || response == null)
        {
            // Loading...
            for (uint i = 0; i < pageSize; i++)
            {
                <MudItem xs="12" md="6" lg="4" xl="3">
                    <MudCard Outlined="true">
                        <MudCardContent>
                            <MudSkeleton Width="30%" Height="42px;" Class="mb-5" />
                            <MudSkeleton Width="80%" />
                            <MudSkeleton Width="100%" />
                        </MudCardContent>
                        <MudCardActions>
                            <MudStack Row="true" Style="width:100%" Spacing="4" Justify="Justify.FlexEnd">
                                <MudSkeleton Width="64px" Height="40px" />
                                <MudSkeleton Width="64px" Height="40px" />
                            </MudStack>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        }
        else if (response.List.Count > 0)
        {
            foreach (var challengeCompetition in response.List)
            {
                <MudItem xs="12" md="6" lg="4" xl="3">
                    <ChallengeCompe ChallengeCompetition="challengeCompetition" 
                                    MusicDetailDictionary="MusicDetailDictionary"
                                    SongNameLanguage="SongNameLanguage"
                                    Baid="Baid" 
                                    Refresh="UpdateCompete" />
                </MudItem>
            }
        }
        else
        { // No users in the database
            <MudItem xs="12">
                <MudText Align="Align.Center" Class="my-8">
                    @Localizer["No Data"]
                </MudText>
            </MudItem>
        }
    }
    else if (AuthService.LoginRequired && !AuthService.IsLoggedIn)
    {
        // Not logged in, redirect
        NavigationManager.NavigateTo("/Login");
    }
    else
    {
        NavigationManager.NavigateTo("/");
    }

    @if (response != null && TotalPages > 1)
    {
        <MudItem xs="12">
            <div class="d-flex flex-column align-center">
                <MudPagination Class="pa-4" Rectangular="true" DisableElevation="true" Count="@TotalPages" Selected="currentPage" SelectedChanged="(page) => OnPageChange(page)" BoundaryCount="1" MiddleCount="3" />
            </div>
        </MudItem>
    }
</MudGrid>
